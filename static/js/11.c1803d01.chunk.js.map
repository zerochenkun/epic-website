{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","name","initialValues","remember","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","whitespace","min","max","Password","getFieldValue","type","htmlType"],"mappings":"kgBAMA,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KAmHKI,UA/GG,WAAO,IACfC,EAAcC,cAAdD,UACFE,EAAUC,cAmChB,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SA1CW,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBR,EAAUW,YAAYH,EAAOI,UAC7BZ,EAAUa,YAAYL,EAAOM,UAC7Bd,EAAUe,WACPC,MACC,WACGP,QAAQC,IAAI,4DACbR,EAAQe,KAAK,QAGhBC,OACC,WAAQT,QAAQC,IAAI,oEA+BpBS,eA3BiB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,MA4BnB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNlB,KAAK,WACLmB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACEC,UAlCa,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,iDAC1DD,QAAQG,cAmCT,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNlB,KAAK,WACLmB,MAAO,CACL,CACEC,UAAU,EACVU,YAAY,EACZT,QAAS,4BAEX,CACEU,IAAK,EACLV,QAAS,mCAEX,CACEW,IAAK,GACLX,QAAS,sCAIb,kBAAC,IAAMY,SAAP,OAGF,kBAAC,IAAKhB,KAAN,CACEC,MAAM,2BACNlB,KAAK,kBACLmB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCA/DG,SAAC,GAAD,IAAEa,EAAF,EAAEA,cAAF,MAAsB,CAC5CZ,UAD4C,SAClCC,EAAMC,GACd,OAAIU,EAAc,cAAgBV,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,mDAiElB,kBAAC,IAAMM,SAAP,OAGF,kBAAC,IAAKhB,KAASxB,EACb,kBAAC,IAAD,CAAQ0C,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/11.c1803d01.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Form, Input, Button} from 'antd';\r\nimport styled from 'styled-components'\r\nimport {useStores} from \"../stores\"\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width:600px;\r\n  margin:30px auto;\r\n  box-shadow:2px 2px 4px 0 rgba(0,0,0,0.2);\r\n  border-radius:4px;\r\n  padding:20px;\r\n`\r\nconst Title = styled.h1`\r\n  text-align:center;\r\n  margin-bottom:30px;\r\n`\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Component = () => {\r\n  const { AuthStore } = useStores()\r\n  const history = useHistory()\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n    AuthStore.setUsername(values.username)\r\n    AuthStore.setPassword(values.password)\r\n    AuthStore.register()\r\n      .then(\r\n        () => {\r\n           console.log('注册成功, 跳转到首页')\r\n          history.push('/')\r\n          }\r\n      )\r\n      .catch(\r\n        () => { console.log('注册失败，什么都不做')}\r\n      )\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const validateUsername = (rule, value) => {\r\n    if (/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\r\n    if (value.length < 4 || value.length > 10) return Promise.reject('长度为4～10个字符');\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const validateConfirm = ({getFieldValue}) => ({\r\n    validator(rule, value) {\r\n      if (getFieldValue('password') === value) return Promise.resolve()\r\n      return Promise.reject('两次密码不一致')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>注册</Title>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '输入用户名',\r\n            },\r\n            {\r\n              validator: validateUsername\r\n            }\r\n          ]}\r\n        >\r\n          <Input/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: false,\r\n              message: '输入密码',\r\n            },\r\n            {\r\n              min: 4,\r\n              message: '最少4个字符'\r\n            },\r\n            {\r\n              max: 16,\r\n              message: '最多16个字符'\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"confirmPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '再次确认密码',\r\n            },\r\n            validateConfirm\r\n          ]}\r\n        >\r\n          <Input.Password/>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Component;"],"sourceRoot":""}